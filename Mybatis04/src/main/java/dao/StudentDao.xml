<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dao.StudentDao">
    <!-- resultType 结果类型，指sql语句执行完毕后，将结果转换成该类型。可以看成是方法的返回值
            值可以是 1.类型的全限定名  2.类型的别名
         处理方式：
            1. mybatis执行sql语句，然后mybatis调用该类的无参构造方法创建对象
            2. mybatis把ResultSet将同名列值付给同名属性，不同名的就跳过。
    -->
    <select id="selectStudentName" resultType="entity.Student">
        select name from student where id=#{id}
    </select>

    <!--  使用typeAlias取别名  -->
    <select id="selectStudentAlias" resultType="stu">
        select * from student where id=#{id}
    </select>

    <!--  使用package取别名  -->
    <select id="selectStudentPackage" resultType="student">
        select * from student where id=#{id}
    </select>

    <!--  返回Map(了解)
            1. 列名是map的key，列值是map的value
            2. 只能获取一行记录。
    -->
    <select id="selectStudentToMap" resultType="map">
        select * from student where id=#{id}
    </select>

    <!-- resultMap结果映射 指定列名跟对象属性的对应关系
            当属性名跟列名不一样时，必须使用resultMap。
            resultMap跟resultType只能使用其中一个
         用法：
            1. 先定义resultMap
            2. 在select标签中，使用resultMap代替resultType
    -->
    <!--id：resultMap的唯一标识    type：java类型的全限定名称或别名-->
    <resultMap id="studentMap" type="entity.Student">
        <!-- 主键列使用<id>标签 其他列使用<result>标签
                column：表中的列名    property：对象的属性名
         -->
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="email" property="email"/>
        <result column="age" property="age"/>
    </resultMap>
    <select id="selectStudentResultMap" resultMap="studentMap">
        select * from student where id=#{id}
    </select>

</mapper>